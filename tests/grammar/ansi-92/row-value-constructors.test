# Row value constructor list is parens-enclosed comma-separated list of row
# value constructor elements
>SELECT  * FROM t1 WHERE (a, b) = (b, a)
statements:
- type: SELECT
  selected_columns:
    - *
  referenced_tables:
    - t1
  where:
    - predicate_type: COMPARISON
      op: EQUAL
      left:
        - element_type: VALUE_EXPRESSION
          value: column-reference[a]
        - element_type: VALUE_EXPRESSION
          value: column-reference[b]
      right:
        - element_type: VALUE_EXPRESSION
          value: column-reference[b]
        - element_type: VALUE_EXPRESSION
          value: column-reference[a]
# Single-value row value constructor lists are OK too
>SELECT * FROM t1 WHERE (a) = (b)
statements:
- type: SELECT
  selected_columns:
    - *
  referenced_tables:
    - t1
  where:
    - predicate_type: COMPARISON
      op: EQUAL
      left:
        element_type: VALUE_EXPRESSION
        value: (column-reference[a])
      right:
        element_type: VALUE_EXPRESSION
        value: (column-reference[b])
# scalar subquery
>SELECT * FROM t1 WHERE a = (SELECT b FROM t2)
statements:
- type: SELECT
  selected_columns:
    - *
  referenced_tables:
    - t1
  where:
    - predicate_type: COMPARISON
      op: EQUAL
      left:
        element_type: VALUE_EXPRESSION
        value: column-reference[a]
      right:
        element_type: VALUE_EXPRESSION
        value: scalar-subquery[
query[selected-columns[column-reference[b]] table-expression[referenced-tables[t2]]]
# scalar subquery inside another scalar subquery
>SELECT * FROM t1 WHERE a = (SELECT b FROM t2 WHERE b = (SELECT c FROM t3))
statements:
- type: SELECT
  selected_columns:
    - *
  referenced_tables:
    - t1
  where:
    - predicate_type: COMPARISON
      op: EQUAL
      left:
        element_type: VALUE_EXPRESSION
        value: column-reference[a]
      right:
        element_type: VALUE_EXPRESSION
        value: scalar-subquery[
query[selected-columns[column-reference[b]] table-expression[referenced-tables[t2 where[column-reference[b] = scalar-subquery[
query[selected-columns[column-reference[c]] table-expression[referenced-tables[t3]]]]]]]
# scalar subquery with correlation and alias
>SELECT * FROM t1 WHERE num_t2 = (SELECT COUNT(*) FROM t2 WHERE t2.t1_id = t1.id)
statements:
- type: SELECT
  selected_columns:
    - *
  referenced_tables:
    - t1
  where:
    - predicate_type: COMPARISON
      op: EQUAL
      left:
        element_type: VALUE_EXPRESSION
        value: column-reference[num_t2]
      right:
        element_type: VALUE_EXPRESSION
        value: scalar-subquery[
query[selected-columns[COUNT(*)] table-expression[referenced-tables[t2 where[column-reference[t2.t1_id] = column-reference[t1.id]]]]]
