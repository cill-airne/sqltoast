# simple equality comparison predicate
>SELECT * FROM t1 WHERE a = 10
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[10]
# anti-equality comparison predicate
>SELECT * FROM t1 WHERE a <> 10
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: NOT_EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[10]
# Order of value expressions should not matter in equality comparison
>SELECT * FROM t1 WHERE 10 = a
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[10]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
# Compound predicate with AND of two equality comparison predicates
>SELECT * FROM t1 WHERE a = 1 AND b = 2
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
              and:
                factor:
                  predicate:
                    type: COMPARISON
                    op: EQUAL
                    left:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[b]
                    right:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: literal[2]
# Compound predicate with OR of two equality comparison predicates
>SELECT * FROM t1 WHERE a = 1 OR b = 2
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[b]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[2]
# Compound predicate with both AND and OR operators
>SELECT * FROM t1 WHERE a = 1 AND b = 2 OR c = 3
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
              and:
                factor:
                  predicate:
                    type: COMPARISON
                    op: EQUAL
                    left:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[b]
                    right:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: literal[2]
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[c]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[3]
# Compound predicate with both OR and AND operators. The AND should take
# precedence
>SELECT * FROM t1 WHERE a = 1 OR b = 2 AND c = 3
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[b]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[2]
              and:
                factor:
                  predicate:
                    type: COMPARISON
                    op: EQUAL
                    left:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[c]
                    right:
                      row_value_constructor:
                        type: ELEMENT
                        element:
                          type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: literal[3]
# Compound predicate with both AND and OR operators using parens for precedence
# override
>SELECT * FROM t1 WHERE a = 1 AND (b = 2 OR c = 3)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
              and:
                factor:
                  search_condition:
                    terms:
                      - factor:
                          predicate:
                            type: COMPARISON
                            op: EQUAL
                            left:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: column-reference[b]
                            right:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: literal[2]
                      - factor:
                          predicate:
                            type: COMPARISON
                            op: EQUAL
                            left:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: column-reference[c]
                            right:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: literal[3]
# Multiple nested search conditions using parens for precedence
>SELECT * FROM t1 WHERE a = 1 AND (b = 2 OR c = 3 AND (d = 4 OR e = 5))
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: COMPARISON
                  op: EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  right:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
              and:
                factor:
                  search_condition:
                    terms:
                      - factor:
                          predicate:
                            type: COMPARISON
                            op: EQUAL
                            left:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: column-reference[b]
                            right:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: literal[2]
                      - factor:
                          predicate:
                            type: COMPARISON
                            op: EQUAL
                            left:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: column-reference[c]
                            right:
                              row_value_constructor:
                                type: ELEMENT
                                element:
                                  type: VALUE_EXPRESSION
                                  value_expression:
                                    type: NUMERIC_EXPRESSION
                                    numeric_expression:
                                      term:
                                        left:
                                          factor:
                                            primary:
                                              type: VALUE
                                              value: literal[3]
                        and:
                          factor:
                            search_condition:
                              terms:
                                - factor:
                                    predicate:
                                      type: COMPARISON
                                      op: EQUAL
                                      left:
                                        row_value_constructor:
                                          type: ELEMENT
                                          element:
                                            type: VALUE_EXPRESSION
                                            value_expression:
                                              type: NUMERIC_EXPRESSION
                                              numeric_expression:
                                                term:
                                                  left:
                                                    factor:
                                                      primary:
                                                        type: VALUE
                                                        value: column-reference[d]
                                      right:
                                        row_value_constructor:
                                          type: ELEMENT
                                          element:
                                            type: VALUE_EXPRESSION
                                            value_expression:
                                              type: NUMERIC_EXPRESSION
                                              numeric_expression:
                                                term:
                                                  left:
                                                    factor:
                                                      primary:
                                                        type: VALUE
                                                        value: literal[4]
                                - factor:
                                    predicate:
                                      type: COMPARISON
                                      op: EQUAL
                                      left:
                                        row_value_constructor:
                                          type: ELEMENT
                                          element:
                                            type: VALUE_EXPRESSION
                                            value_expression:
                                              type: NUMERIC_EXPRESSION
                                              numeric_expression:
                                                term:
                                                  left:
                                                    factor:
                                                      primary:
                                                        type: VALUE
                                                        value: column-reference[e]
                                      right:
                                        row_value_constructor:
                                          type: ELEMENT
                                          element:
                                            type: VALUE_EXPRESSION
                                            value_expression:
                                              type: NUMERIC_EXPRESSION
                                              numeric_expression:
                                                term:
                                                  left:
                                                    factor:
                                                      primary:
                                                        type: VALUE
                                                        value: literal[5]
# IN (<value list>) operator with single value
>SELECT * FROM t1 WHERE a IN (1)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[1]
# Negate of IN (<value list>) operator with single value
>SELECT * FROM t1 WHERE a NOT IN (1)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  negate: true
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[1]
# top-level negation of IN (<value list>) operator with single value
>SELECT * FROM t1 WHERE NOT a IN (1)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[1]
                negate: true
# double-negation of IN (<value list>) operator with single value
>SELECT * FROM t1 WHERE NOT a NOT IN (1)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  negate: true
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[1]
                negate: true
# IN (<value list>) operator with multiple value
>SELECT * FROM t1 WHERE a IN (1, 2, 3)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[1]
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[2]
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: VALUE
                                  value: literal[3]
# IN (<value list>) operator with complex value expressions
>SELECT * FROM t1 WHERE a IN (1 - b, CHAR_LENGTH(b))
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_VALUES
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  values:
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          left:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: literal[1]
                          op: SUBTRACT
                          right:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[b]
                    - value_expression:
                        type: NUMERIC_EXPRESSION
                        numeric_expression:
                          term:
                            left:
                              factor:
                                primary:
                                  type: FUNCTION
                                  function:
                                    type: CHAR_LENGTH
                                    operand: column-reference[b]
# IN (<subquery>) operator
>SELECT * FROM t1 WHERE a IN (SELECT t1_a FROM t2)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: IN_SUBQUERY
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_a]
                    referenced_tables:
                      - t2
# EXISTS (<subquery>) predicate
>SELECT * FROM t1 WHERE EXISTS (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: EXISTS
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# NOT EXISTS (<subquery>) predicate
>SELECT * FROM t1 WHERE NOT EXISTS (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: EXISTS
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
                  negate: true
# <row> MATCH (<subquery>) predicate
>SELECT * FROM t1 WHERE id MATCH (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: MATCH
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[id]
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# <row> MATCH (<subquery>) predicate explicit FULL
>SELECT * FROM t1 WHERE id MATCH FULL (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: MATCH
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[id]
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# <row> MATCH (<subquery>) predicate with UNIQUE
>SELECT * FROM t1 WHERE id MATCH UNIQUE (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: MATCH
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[id]
                  unique: true
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# <row> MATCH (<subquery>) predicate explicit PARTIAL
>SELECT * FROM t1 WHERE id MATCH PARTIAL (SELECT t1_id FROM t2 WHERE t1_id = t1.id)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: MATCH
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[id]
                  partial: true
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1_id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# LIKE predicate with simple column comparison with string
>SELECT * FROM t1 WHERE a LIKE 's%'
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: LIKE
                  match:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  pattern:
                    value_expression:
                      type: STRING_EXPRESSION
                      character_expression:
                        factors:
                          - value: literal['s%']
# LIKE predicate with concatenated column comparison with string
>SELECT * FROM t1 WHERE a LIKE b || '%'
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: LIKE
                  match:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[a]
                  pattern:
                    value_expression:
                      type: STRING_EXPRESSION
                      character_expression:
                        factors:
                          - value: column-reference[b]
                          - value: literal['%']
# OVERLAPS predicate with date columns from multiple tables
>SELECT * FROM t1, t2 WHERE (t1.start, t1.end) OVERLAPS (t2.start, t2.end)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
        - t2
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: OVERLAPS
                  left:
                    row_value_constructor:
                      type: LIST
                      elements:
                        - type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1.start]
                        - type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t1.end]
                  right:
                    row_value_constructor:
                      type: LIST
                      elements:
                        - type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.start]
                        - type: VALUE_EXPRESSION
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.end]
# the UNIQUE predicate returns a match when the correlation returns one and
# only one row
>SELECT * FROM t1 WHERE UNIQUE (SELECT t2.id FROM t2 WHERE t2.t1_id = t1.id);
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: UNIQUE
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t2.t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
# negated UNIQUE predicate
>SELECT * FROM t1 WHERE NOT UNIQUE (SELECT t2.id FROM t2 WHERE t2.t1_id = t1.id);
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: UNIQUE
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t2.t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
                  negate: true
# Combine EXISTS and UNIQUE predicate
>SELECT * FROM t1 WHERE UNIQUE (SELECT t2.id FROM t2 WHERE t2.t1_id = t1.id) AND EXISTS (SELECT t3.id FROM t3 WHERE t3.t1_id = t1.id);
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: UNIQUE
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.id]
                    referenced_tables:
                      - t2
                    where:
                      search_condition:
                        terms:
                          - factor:
                              predicate:
                                type: COMPARISON
                                op: EQUAL
                                left:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t2.t1_id]
                                right:
                                  row_value_constructor:
                                    type: ELEMENT
                                    element:
                                      type: VALUE_EXPRESSION
                                      value_expression:
                                        type: NUMERIC_EXPRESSION
                                        numeric_expression:
                                          term:
                                            left:
                                              factor:
                                                primary:
                                                  type: VALUE
                                                  value: column-reference[t1.id]
                and:
                  factor:
                    predicate:
                      type: EXISTS
                      query:
                        selected_columns:
                          - derived_column:
                              value_expression:
                                type: NUMERIC_EXPRESSION
                                numeric_expression:
                                  term:
                                    left:
                                      factor:
                                        primary:
                                          type: VALUE
                                          value: column-reference[t3.id]
                        referenced_tables:
                          - t3
                        where:
                          search_condition:
                            terms:
                              - factor:
                                  predicate:
                                    type: COMPARISON
                                    op: EQUAL
                                    left:
                                      row_value_constructor:
                                        type: ELEMENT
                                        element:
                                          type: VALUE_EXPRESSION
                                          value_expression:
                                            type: NUMERIC_EXPRESSION
                                            numeric_expression:
                                              term:
                                                left:
                                                  factor:
                                                    primary:
                                                      type: VALUE
                                                      value: column-reference[t3.t1_id]
                                    right:
                                      row_value_constructor:
                                        type: ELEMENT
                                        element:
                                          type: VALUE_EXPRESSION
                                          value_expression:
                                            type: NUMERIC_EXPRESSION
                                            numeric_expression:
                                              term:
                                                left:
                                                  factor:
                                                    primary:
                                                      type: VALUE
                                                      value: column-reference[t1.id]
# quantified comparison predicates are like comparison predicates with an
# ANY|ALL|SOME quantifier
>SELECT * FROM t1 WHERE t1.start > ALL (SELECT t2.start FROM t2)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: QUANTIFIED_COMPARISON
                  op: GREATER_THAN
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[t1.start]
                  quantifier: ALL
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.start]
                    referenced_tables:
                      - t2
# quantified comparison predicate with ANY quantifier
>SELECT * FROM t1 WHERE t1.start <= ANY (SELECT t2.start FROM t2)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: QUANTIFIED_COMPARISON
                  op: LESS_THAN_OR_EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[t1.start]
                  quantifier: ANY
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.start]
                    referenced_tables:
                      - t2
# quantified comparison predicate with SOME quantifier translated to ANY quantifier
>SELECT * FROM t1 WHERE t1.start <= SOME (SELECT t2.start FROM t2)
statements:
  - type: SELECT
    query:
      selected_columns:
        - derived_column:
            asterisk: true
      referenced_tables:
        - t1
      where:
        search_condition:
          terms:
            - factor:
                predicate:
                  type: QUANTIFIED_COMPARISON
                  op: LESS_THAN_OR_EQUAL
                  left:
                    row_value_constructor:
                      type: ELEMENT
                      element:
                        type: VALUE_EXPRESSION
                        value_expression:
                          type: NUMERIC_EXPRESSION
                          numeric_expression:
                            term:
                              left:
                                factor:
                                  primary:
                                    type: VALUE
                                    value: column-reference[t1.start]
                  quantifier: ANY
                  query:
                    selected_columns:
                      - derived_column:
                          value_expression:
                            type: NUMERIC_EXPRESSION
                            numeric_expression:
                              term:
                                left:
                                  factor:
                                    primary:
                                      type: VALUE
                                      value: column-reference[t2.start]
                    referenced_tables:
                      - t2
