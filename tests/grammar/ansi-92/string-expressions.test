# character string literal value expression primary
>SELECT 'a' FROM t1
statements:
  - type: SELECT
    selected_columns:
      - literal['a']
    referenced_tables:
      - t1
# national character string literal value expression primary
>SELECT N'motorček' FROM t1
statements:
  - type: SELECT
    selected_columns:
      - literal['motorček']
    referenced_tables:
      - t1
# bit string literal value expression primary
>SELECT B'01000101101' FROM t1
statements:
  - type: SELECT
    selected_columns:
      - literal['01000101101']
    referenced_tables:
      - t1
# hex string literal value expression primary
>SELECT X'FE1CD34A' FROM t1
statements:
  - type: SELECT
    selected_columns:
      - literal['FE1CD34A']
    referenced_tables:
      - t1
# A simple scalar subquery
>SELECT (SELECT b FROM t2) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - scalar-subquery[
query[selected-columns[column-reference[b]] table-expression[referenced-tables[t2]]]
    referenced_tables:
      - t1
# named and dynamic parameters
>SELECT :name, :name_long, ? FROM t1
statements:
  - type: SELECT
    selected_columns:
      - parameter[name]
      - parameter[name_long]
      - parameter[?]
    referenced_tables:
      - t1
# character value expression using collation
>SELECT 'ß' COLLATE utf8mb4_general_ci FROM t1
statements:
  - type: SELECT
    selected_columns:
      - literal['ß'] COLLATE utf8mb4_general_ci
    referenced_tables:
      - t1
# character value expression using concatenation
>SELECT a || b FROM t1
statements:
  - type: SELECT
    selected_columns:
      - concatenate[column-reference[a], column-reference[b]]
    referenced_tables:
      - t1
# character value expression using concatenation with some factors having a collation
>SELECT a || b COLLATE utf8_bin FROM t1
statements:
  - type: SELECT
    selected_columns:
      - concatenate[column-reference[a], column-reference[b] COLLATE utf8_bin]
    referenced_tables:
      - t1
# SUBSTRING string function with no for length modifier
>SELECT SUBSTRING(a FROM 1) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - substring[column-reference[a] FROM literal[1]]
    referenced_tables:
      - t1
# SUBSTRING string function with a for length modifier
>SELECT SUBSTRING(a FROM 1 FOR 2) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - substring[column-reference[a] FROM literal[1] FOR literal[2]]
    referenced_tables:
      - t1
# UPPER and LOWER string functions
>SELECT UPPER(a), LOWER(a) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - upper[column-reference[a]]
      - lower[column-reference[a]]
    referenced_tables:
      - t1
# TRANSLATE string function
>SELECT TRANSLATE(a USING utf8_bin) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - translate[column-reference[a] USING utf8_bin]
    referenced_tables:
      - t1
# CONVERT string function
>SELECT CONVERT(a USING utf8_bin) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - convert[column-reference[a] USING utf8_bin]
    referenced_tables:
      - t1
# TRIM string function with no trim specification or character
>SELECT TRIM(a) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - trim[column-reference[a]]
    referenced_tables:
      - t1
# TRIM string function with trim specifications
>SELECT TRIM(LEADING ' ' FROM a) FROM t1
statements:
  - type: SELECT
    selected_columns:
      - trim[LEADING literal[' '] FROM column-reference[a]]
    referenced_tables:
      - t1
